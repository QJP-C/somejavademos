<?xml version="1.0" encoding="UTF-8" ?>  <!--该文件必须顶格 前面不能有空行-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                        <!--主键自增-->
<mapper namespace="com.qjp.mybatis.mapper.DemoMapper">  <!--命名空间指定对应的mapper位置-->
    <!--如果使用的是mysql这样的支持自增主键的数据库，可以简单的使用第一种方式；对于不支持自增主键的数据库，如oracle，则没有主键返回这一概念，
    而需要在插入之前先生成一个主键。此时可以用<selectKey>标签，设置其order属性为BEFORE，并在标签体内写上生成主键的SQL语句，这样在插入之前，
    会先处理<selectKey>，生成主键，再执行真正的插入操作。

    <selectKey>标签其实就是一条SQL，这条SQL的执行，可以放在主SQL执行之前或之后，并且会将其执行得到的结果封装到入参的Java对象的指定属性上。
    注意<selectKey>子标签只能用在<insert>和<update>标签中。上面的LAST_INSERT_ID()实际上是MySQL提供的一个函数，可以用来获取最近插入或更新的记录的主键id。-->

    <insert id="insert1" parameterType="com.qjp.mybatis.po.Student" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO student (name,score,age,gender) VALUES (#{name},#{score},#{age},#{gender});
    </insert>


    <insert id="insert2" parameterType="com.qjp.mybatis.po.Student">
        INSERT INTO student (name,score,age,gender) VALUES (#{name},#{score},#{age},#{gender});
        <selectKey keyProperty="id" order="AFTER" resultType="int" >
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <!--批量查询-->
    <select id="batchFind" resultType="student" parameterType="java.util.List">
        SELECT * FROM student
        <where>
            <if test="list != null and list.size() > 0">
                AND id in
                <foreach collection="list" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>

